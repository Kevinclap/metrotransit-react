{"version":3,"sources":["components/Header.js","services/route.js","services/data.js","services/direction.js","services/stop.js","services/busTime.js","components/RoutesInput.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","react_default","a","createElement","Navbar","inverse","collapseOnSelect","Brand","href","target","rel","Toggle","getRoutes","_getRoutes","apply","this","arguments","_callee","response","data","routes","regenerator_default","wrap","_context","prev","next","axios","get","sent","forEach","item","push","Description","abrupt","t0","console","error","stop","getData","_x","_x2","_x3","_x4","_getData","url","key","value","arg","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","log","undefined","Symbol","iterator","done","return","finish","t1","getDirections","_getDirections","route","routeId","directionsUrl","directions","getStops","_getStops","direction","directionId","stopsUrl","stops","Text","getNextBus","_getNextBus","_callee2","getTime","_getTime","routesUrl","stopId","timeUrl","time","timeUntilNextBus","_context2","Object","asyncToGenerator","mark","dateString","timeStampString","timeStamp","currentTime","substring","moment","unix","parseInt","RoutesInput","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filteredRoutes","filteredStops","nextBus","disabledButton","filterRoutes","bind","assertThisInitialized","onDirectionChange","filterStops","handleClick","setState","event","_this2","setTimeout","results","query","length","toConsumableArray","filter","toLowerCase","startsWith","e","_this3","busTime","_this4","style","paddingLeft","paddingTop","autocomplete","suggestions","completeMethod","size","placeholder","dropdown","minLength","onChange","onSelect","getDirectionsFromState","justifyContent","alignItems","listbox","options","optionLabel","primereact_button","label","onClick","disabled","Component","App","className","components_Header","components_RoutesInput","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.10262322.chunk.js","sourcesContent":["import { Navbar } from 'react-bootstrap';\n\nimport React from 'react'\n\nconst Header = () => {\n  return (\n    <div>\n     <Navbar inverse collapseOnSelect>\n      <Navbar.Header>\n        <Navbar.Brand>\n          <a href=\"http://svc.metrotransit.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Metro Transit</a>\n        </Navbar.Brand>\n      <Navbar.Toggle />\n     </Navbar.Header>\n  </Navbar>\n    </div>\n  )\n}\n\nexport default Header;\n","import axios from 'axios';\n\nexport default async function getRoutes() {\n\n// Find the routeId for route from args\nlet url = 'https://svc.metrotransit.org/NexTrip/Routes?format=json';\ntry {\n    const response = await axios.get(url);\n    let data = response.data;\n    let routes = [];\n\n    data.forEach((item) => {\n        routes.push(item.Description);\n    })\n    \n    return routes;\n\n  } catch (error) {\n    console.error('This is error: ', error);\n  }\n}\n","import axios from 'axios';\n\nexport default async function getData(url, key, value, arg) {\n    try {\n        const response = await axios.get(url);\n        let data = response.data;\n        console.log('This is response from data.js: ', response.data);\n\n        for(const item of data) {\n            console.log('this is item inside data function: ', item);\n            if (arg === item[key]) {\n                console.log('This is item from data: ', item[value]);\n                return item[value];\n            }\n        }\n      } catch (error) {\n        console.error('This is error: ', error);\n      }\n}","import axios from 'axios';\nimport getData from './data';\n\nexport default async function getDirections(route) {\n\n    console.log('This is route from getDirection: ', route);\n\nlet routesUrl = 'https://svc.metrotransit.org/NexTrip/Routes?format=json';\nlet routeId = await getData(routesUrl, 'Description', 'Route', route);\nconsole.log('This is routeId in direction: ', routeId);\n\nlet directionsUrl = 'https://svc.metrotransit.org/NexTrip/Directions/' + routeId + '?format=json';\n\nconsole.log('url from directions: ', directionsUrl);\n\n\ntry {\n    const response = await axios.get(directionsUrl);\n    let data = response.data;\n    let directions = [];\n\n    data.forEach((item) => {\n        directions.push(item);\n    })\n    console.log(\"This is Directions inside direction.js: \", directions);\n    return directions;\n\n  } catch (error) {\n    console.error('This is error: ', error);\n  }\n}\n","import axios from 'axios';\nimport getData from './data';\n\nexport default async function getStops(route, direction) {\n\nconsole.log('This is route from getStop: ', route);\nconsole.log('This is direction from getStop', direction);\n\nlet routesUrl = 'https://svc.metrotransit.org/NexTrip/Routes?format=json';\nlet routeId = await getData(routesUrl, 'Description', 'Route', route);\nconsole.log('This is routeId in direction: ', routeId);\n\nlet directionsUrl = 'https://svc.metrotransit.org/NexTrip/Directions/' + routeId + '?format=json';\nlet directionId = await getData(directionsUrl, 'Text', 'Value', direction);\n\nconsole.log('url from stops: ', directionsUrl);\n\nlet stopsUrl = 'https://svc.metrotransit.org/NexTrip/Stops/' + routeId + '/' + directionId + '?format=json';\n\ntry {\n    const response = await axios.get(stopsUrl);\n    let data = response.data;\n    let stops = [];\n\n    data.forEach((item) => {\n        stops.push(item.Text);\n    })\n    console.log(\"This is Stops inside direction.js: \", stops);\n    return stops;\n\n  } catch (error) {\n    console.error('This is error: ', error);\n  }\n}","import moment from 'moment';\nimport getData from './data';\n\nexport default async function getNextBus(route, direction, stop) {\n\nlet url = 'https://svc.metrotransit.org/NexTrip/'\n\n// Calculate time until next bus arrival\nasync function getTime(dateString) {\n\n    let timeStampString = dateString.substring(6,16);\n    let timeStamp = moment(timeStampString, 'X').unix();\n    let currentTime = moment().unix();\n    let timeUntilNextBus = parseInt((timeStamp - currentTime) / 60);\n    return timeUntilNextBus;\n\n}\n\n// Find the routeId for route from args\nlet routesUrl = url + 'Routes?format=json';\nlet routeId = await getData(routesUrl, 'Description', 'Route', route);\n\n// Kill process if route is not valid\nif(!routeId) {\n    return console.log(route + ' is not a valid route.')\n}\n\n// Find the directionId for direction from args\nlet directionsUrl = url + 'Directions/' + routeId + '?format=json';\nlet directionId = await getData(directionsUrl, 'Text', 'Value', direction);\n\n// Kill process if direction is not valid\nif(!directionId) {\n    return console.log(route + ' doesn\\'t go ' + direction);\n}\n\n// Find the stopId for stop from args\nlet stopsUrl = url + 'Stops/' + routeId + '/' + directionId + '?format=json';\nlet stopId = await getData(stopsUrl, 'Text', 'Value', stop);\n\n// Kill process if stop is not valid\nif(!stopId) {\n    return console.log(stop + ' it\\'s not a valid stop for route ' + route + ' ' + direction);\n}\n\n// Find TimeStamp string according to route, direction and stop id's\nlet timeUrl = url + routeId + '/' + directionId + '/' + stopId + '?format=json';\nlet time = await getData(timeUrl, 'RouteDirection', 'DepartureTime', direction);\n\n// Kill process if time is not valid\nif(!time) {\n    return console.log('Could not get next connection');\n}\n\n// Calculate time until next bus\nlet timeUntilNextBus = await getTime(time);\n\nif (timeUntilNextBus > 1) { \n    console.log('Next bus arriving in ', timeUntilNextBus, 'minutes!');\n    return 'Next bus arriving in ' + timeUntilNextBus + 'minutes!';\n} else {\n    console.log('Next bus arriving in 1 minute or less');\n    return 'Next bus arriving in 1 minute or less';\n}\n}","import React, { Component } from 'react';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport {ListBox} from 'primereact/listbox';\nimport {Button} from 'primereact/button';\n\nimport getRoutes from '../services/route';\nimport getDirections from '../services/direction';\nimport getStops from '../services/stop';\nimport busTime from '../services/busTime'\n\nclass RoutesInput extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            filteredRoutes: null,\n            direction: null,\n            filteredStops: null,\n            nextBus: null,\n            disabledButton: 'disabled'\n        };\n        this.filterRoutes = this.filterRoutes.bind(this);\n        this.onDirectionChange = this.onDirectionChange.bind(this);\n        this.filterStops = this.filterStops.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    async componentDidMount() {\n        this.routes = await getRoutes();\n        console.log(this.state.route);\n    }\n\n    async getDirectionsFromState(route) {\n        console.log('This is route before await: ', route);\n        this.directions = await getDirections(route);\n        this.setState({direction: this.directions});\n        console.log(\"This is route inside getDirectionformState: \", route);\n        console.log('This is directions: ', this.directions);\n        console.log('This is value: ', this.state.route);\n        console.log('This is state!!!!!!!!', this.state);\n    }\n    \n    filterRoutes(event) {\n        setTimeout(() => {\n            let results;\n\n            if (event.query.length === 0) {\n                results = [...this.routes];\n            }\n            else {\n                results = this.routes.filter((route) => {\n                    return route.toLowerCase().startsWith(event.query.toLowerCase());\n                });\n            }\n            this.setState({ filteredRoutes: results });\n        }, 250);\n    }\n\n    async onDirectionChange(e) {\n        console.log('This is e.value direction: ', e.value);\n        this.setState({direction: e.value});\n        if(e.value) {\n            this.stops = await getStops(this.state.route, e.value.Text);\n        }\n        \n        console.log(\"This is stops!!!!!!!: \", this.stops);\n\n    }\n\n    filterStops(event) {\n        setTimeout(() => {\n            let results;\n\n            if (event.query.length === 0) {\n                results = [...this.stops];\n            }\n            else {\n                results = this.stops.filter((stop) => {\n                    return stop.toLowerCase().startsWith(event.query.toLowerCase());\n                });\n            }\n            this.setState({ filteredStops: results });\n        }, 250);\n    }\n\n    async handleClick() {\n        console.log('This is state: ', this.state);\n        this.nextBus = await busTime(this.state.route, this.state.direction.Text, this.state.stop);\n        console.log(\"This is time till bus: \", this.nextBus);\n        this.setState({ nextBus: this.nextBus });\n    }\n    \n  render() {\n    return (\n      <div style={{paddingLeft: '10px', paddingTop: '10px'}}>\n          <div>\n        <h3>Choose a Route</h3>    \n        <AutoComplete value={this.state.route} suggestions={this.state.filteredRoutes} completeMethod={this.filterRoutes}\n         size={50} placeholder=\"Routes\" dropdown={true} minLength={1} onChange={(e) => this.setState({route: e.value})}\n         onSelect={(e) => this.getDirectionsFromState(e.value)}/>\n        </div>\n        <div>\n        {(this.directions && this.directions.length !== 0) && \n            <div style={{justifyContent: 'center', alignItems: 'center'}}>\n            <h3>Choose a Direction</h3>    \n            <ListBox value={this.state.direction} options={this.directions} onChange={this.onDirectionChange} \n            optionLabel=\"Text\" style={{justifyContent: 'center'}}/>\n            </div>\n        }\n        </div>\n        <div>\n        </div>\n        {(this.stops && this.stops.length !== 0) &&\n           <div>\n           <h3>Choose a Stop</h3>    \n           <AutoComplete value={this.state.stop} suggestions={this.state.filteredStops} completeMethod={this.filterStops}\n           size={50} placeholder=\"Stops\" dropdown={true} minLength={1} onChange={(e) => this.setState({stop: e.value, disabledButton: ''})}/>\n           </div> \n        }\n        <div style={{paddingTop: '10px'}}>\n        <Button label=\"Submit\" onClick={this.handleClick} disabled={this.state.disabledButton}/>\n        </div>\n\n        { this.nextBus ? <h4>{this.nextBus}</h4> : null }\n\n      </div>\n    )\n  }\n}\n\nexport default RoutesInput\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nimport Header from './components/Header';\nimport RoutesInput from './components/RoutesInput';\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"Header\">\n         <Header/>\n        </div>\n        <div className=\"App\">\n         <RoutesInput/>\n          <header className=\"App-header\">\n           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}